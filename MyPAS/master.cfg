# This is the configuration file for the checkMaster.py, findUR.py and matchAltUR.py scripts
# This configuration file defines all the parameters for a master PMI extract file.
# These configuration values can be overwritten in extractDirectory/extract.cfg when the PMI extract is place in a sub-directory of the master PMI directory.

# The following variables need to be defined for the master extract
# The master PMI file name and the number of columns in this CSV file - 'default' values - can be re-defined in extract.cfg
[masterFile]
masterFileName=mkPMImaster.csv
masterFieldCount=6


# The master extract columns to be saved and the titles for those columns - 'default' values - can be re-defined in extract.cfg
# (a value of -1 saves the record number - can be used as PID if extract doesn't have the concept of a unique PID)
# (any other negative value saves a computed value. Algorithms matching these negative values have to be hand coded in Clean"master".pm)
# NOTE: @masterSaveTitles is used to set $masterHas{"title"} so don't use title names that match concept names [see masterDir/params.pm]
#	unless the column contains that concept.
[masterSaveColumns]
master save columns=0, 1, 2, 3, 4, 5
master save titles=PID,UR,FORENAME,SURNAME,DATE_OF_BIRTH,SEX


# The master PMI names - default values - can be re-defined in extract.cfg
# masterLongName and masterShortName names are used differently.
# masterLongName is used in error messages. masterShortName is used in the construction of filenames and column headings in reports.
[masterNames]
master long name=MyPAS
master short name=MyPAS


# masterPIDname is the name of the uniquie patient ID in the cleaned up master PMI extract - default value - can be re-defined in extract.cfg
# (set to PID if there is a unique PID in the extract, or 'RecNo' if not)
# masterURname is the name of the Unit Record concept in the cleaned up master PMI extract - default value - can be re-defined in extract.cfg
# There must be a columns with the same names defined in masterSaveTitles.
# (masterSaveTitles must be define in this configuration file, but can be redefined in extractDirectory/extract.cfg)
[masterIDs]
masterPIDname=PID
masterURname=UR


[masterNextUR]
# nextMasterUR must be defined and greater than 0 for findUR.pl to allocate UR numbers to not found patients - default value - can be re-defined in extract.cfg
next master UR=-1


# The following is the mapping of concepts to columns. Concordance of each concept, with a masterSaveColumn is mandatory - default values - can be re-defined in extract.cfg
# This section defines the important concepts in the cleaned up master PMI extract and the associated column names/titles.
#	Some concepts (PID values, UR values, Surname, Firstname, Date of Birth and Sex) must be defined.
# 	Additional concepts (like address, medicare number etc) can be defined, for extensive checking, but concept names must be unique.
#	Concept names also provide a way of renaming columns as all detailed reports use the concept names as column headings.
# PID			The column name in the cleaned up master PMI file containing Person Identification values
# UR			The column name in the cleaned up master PMI file containing Unit Record values
# FamilyName		The column name in the cleaned up master PMI file containing person family name
# GivenName		The column name in the cleaned up master PMI file containing person given name
# Birthdate		The column name in the cleaned up master PMI file containing person Date of Birth
# Sex			The column name in the cleaned up master PMI file containing person Sex
# If the master PMI extract supports the concept of merged records, then 'Merged' must be set to the name of the column
#	in the cleaned up master PMI file that may contain a reference (PID or UR value)
#	to the other PMI record associated with the merge. [Set to None if merges are not supported in the master PMI extract]
# NOTE: To support merges the master extract must include a 'merged' column being either a unique patient Id (PID) or UR, which must be absolutely unique.
# If the master PMI extract support the concept of alias records, then 'Alias' must be set to the name of the column
#	in the cleaned up master PMI file that contains the reference (PID or UR value)
#	to the other PMI record, for which this record is an alias. [Set to None if aliases are not supported in the master PMI extract]
# If the master PMI extract supports the concept of deleted records, then 'Deleted' must be set to the name of the column
#	in the cleaned up master PMI file that contains the deleted flag. [Set to None if deleted records are not supported in the master PMI extract]
#	Interpretation of the 'Deleted' flag must be coded into linkMaster.py
# NOTE: 'master reporting columns' are both column headings in reports and concepts and need to defined here.
[masterConcepts]
FamilyName=SURNAME
Family Name=SURNAME
GivenName=FORENAME
Given Name=FORENAME
Birthdate=DATE_OF_BIRTH
Date of Birth=DATE_OF_BIRTH
Sex=SEX



# 'master merged link' defines the linking concept used to link merged records. (Must be UR, PID or None if merges are not supported or defined in the master PMI extract)
# (default values - can be re-defined in extract.cfg)
# The patient information in this record may have merged 'OUT' to the merged PID or UR, thus making THIS RECORD the depricated record (no longer used).
# Or the merged PID or UR may have been merge 'IN' to this patient record (this making the the merged PID/UR record the depricated record).
# Hence 'master merged is' must be 'OUT' or 'IN' as it defines the merge direction.
[masterMerged]
master merged link=None
master merged is=OUT


# 'master alias link' defines the linking identifier used to link alias records. (Must be UR, PID or None if aliases are not supported or defined in the master PMI extract)
# (default values - can be re-defined in extract.cfg)
# 'master alias concpet defines the column name where the alias UR or PID will be found. If this column is not valued then this record is not an alias.
# Aliases must always be aliased 'OUT'. i.e. if this record in an alias, then it is an alias of another record.
[masterAlias]
master alias link=None


# 'master reporting columns' is the order in which the 'master.csv' data will be reported - default values - can be re-defined in extract.cfg
# DON'T include PID or UR as they are prepended to all reports
# Everything in 'master reporting columns' gets reported.
# The values here must be concepts or a column name in the cleaned up master PMI extraction file
[masterReporting]
master reporting columns=Family Name,Given Name,Date of Birth,Sex


# Extensive checking for possible duplicates configuration
# All checking returns a score between 0 and 100 and a weight (if the data is missing in the master PMI extract then the weight is 0, otherwise it is the weight configured below).
# If Extensive checking is invoked, then sound confidence scores are computed for FamilyName and GivenName, being ((DoubleMetaphone[0.0|2.0|3.5|5.0|7.0] + NYSIIS[0.0|1.0]) / 8.0) * 100.0
# A total confidence score is computed by summing the returned score mulitiplied by the returne weight, for each configured check. Then dividing this total by the sum of the returned weights.
# A Check Confidence Value must be configured, as only matches with a total confidence score greater than this value will be reported.
# The selection of the Check Confidence Value, plus which checking functions on core data to run, plus which other data elements to check, and the weighting for each, is normally a matter of trial and error.
# It will vary depending upon the provile fo the master PMI and the application used to collect the master PMI data.
# The Check Confidence Value should be low to pick up as many possible duplicates as possible, but no so low as to pick up 'Sex===Sex' as a possible duplicate.
# The core data checking functions are:-
# FamilyName - check for an exact match of FamilyName
# FamilyNameSound - the sound confidence of the Family Name as defined above. [Returns a weight of 0 if the Family names are identical]
# GivenName - check for an exact match of GivenName
# GivenNameSound - the sound confidence of the Given Name as defined above. [Returns a weight of 0 if the Given names are identical]
# MiddleNames - check for an exact match of MiddleNames [requires MiddleNames to be be defined in the [masterConcepts] section
# MiddleNamesInitial - the first letter of the Middle Names [requires MiddleNames to be be defined in the [masterConcepts] section
# Sex - check for an exact match of Sex
# Birthdate - check for an exact match of Birthdate
# BirthdateNearYear - Birthdates are within +/- 'n' years of each other. [Returns a weight of 0 if the Birthdates are identical]
# BirthdateNearMonth - Birthdates are within +/- 'n' months of each other (exact match of year). [Returns a weight of 0 if the Birthdates are identical]
# BirthdateNearDay - Birthdates are within +/- 'n' days of each other (exact match of year and month). [Returns a weight of 0 if the Birthdates are identical]
# BirthdateYearSwap - check if the Birthdates match if the last two digits of year are swapped (i.e. 1976===1967). [Returns a weight of 0 if the Birthdates are identical]
# BirthdateDayMonthSwap - check if the Birthdates match if the day and month are swapped (i.e. 1976-03-05===1976-05-03). [Returns a weight of 0 if the Birthdates are identical]
[ExtensiveConfidence]
Check Confidence Value=50.0

# For each core data checking function, configure a weight and possible parameter value (where +/- 'n' is required)
# A weight of 0 implies that this core data checking function is not to be run
[ExtensiveCore]
FamilyName=10
FamilyNameSound=8
GivenName=10
GivenNameSound=8
MiddleNames=0
Sex=5
Birthdate=10
BirthdateNearYear=2,10
BirthdateNearMonth=3,3
BirthdateNearDay=5,10
BirthdateYearSwap=2
BirthdateDayMonthSwap=5

# For all other fields only an exact match is possible (i.e. Address1===Address1)
# All 'other fields' must be defined in the [masterConcepts] section
# For each 'other field' configure a weight value
[ExtensiveFields]

